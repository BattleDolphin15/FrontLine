#include "PassShader.h"Shader::Shader(const char* name)	: PassDesc(name,FX_SHADER_DESC_FLAG){}Shader::~Shader(){}bool Shader::LoadShaderFromFile(const char* fileName){	std::string shaderCode;	std::ifstream shaderStream(filePath, std::ios::in);	if (shaderStream.is_open())	{		std::string Line = "";		while (getline(shaderStream, Line))			shaderCode += "\n" + Line;		shaderStream.close();	}	m_Code = shaderCode;	return true;}bool Shader::LoadShaderCode(const char* code){	m_Code = code;}void Shader::ValidateAttachments(){	if (m_Parent.lock()) {		std::shared_ptr<GPUPipeline> pipeline = std::static_pointer_cast<GPUPipeline>(m_Parent.lock()->Find(FX_PIPELINE_DESC_FLAG));		if (pipeline) {			pipeline->Attach(shared_from_this());			return;		}	}}